{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.sandbox.aws.maileva.net/lel/v1",
      "description": "Sandbox"
    },
    {
      "url": "https://api.maileva.com/lel/v1",
      "description": "Production"
    },
    {
      "url": "https://api.preprd.maileva.pop.smartpanda.eu/lel/v1",
      "description": "Préproduction"
    },
    {
      "url": "https://api.release.aws.maileva.net/lel/v1",
      "description": "Release"
    },
    {
      "url": "https://api.qa.aws.maileva.net/lel/v1",
      "description": "QA"
    },
    {
      "url": "https://api.ci.aws.maileva.net/lel/v1",
      "description": "CI"
    }
  ],
  "info": {
    "version": "1.2",
    "title": "Maileva / Envoi et Suivi de courriers LEL",
    "description": "API pour envoyer et suivre des courriers LEL\n\nElles comprennent les fonctions clés pour :\n\n - Créer un envoi,\n - Ajouter des documents et des destinataires,\n - Choisir ses options (noir & blanc ou couleur, recto ou recto-verso, avec ou sans AR …),\n - Prévisualiser le courrier avant impression,  \n - Suivre la production (date de planification, suivi de l’envoi…).\n\n Les évènements disponibles sont (dans l'ordre):\n      \n  <table>\n    <tr>\n      <th>Type d'évènement (`event_type`)</th>\n      <th>Type de ressource (`resource_type`)</th>\n      <th>Description</th>\n      <th>Attributs valorisés</th>\n    </tr>\n    <tr>\n      <td>ON_STATUS_ACCEPTED</td>\n      <td>lel/v1/sendings</td>\n      <td>L'envoi est passé au statut *ACCEPTED*</td>\n      <td>Le nombre de pages à facturer `billed_pages_count`, le nombre de pages `pages_count`, le nombre de feuilles `sheets_count` et les codes articles `invoice_items` sont valorisés</td>\n    </tr>\n    <tr>\n      <td>ON_STATUS_REJECTED</td>\n      <td>lel/v1/sendings</td>\n      <td>L'envoi est passé au statut *REJECTED*</td>\n      <td>Non applicable</td>\n    </tr>\n    <tr>\n      <td>ON_STATUS_PROCESSED</td>\n      <td>lel/v1/sendings</td>\n      <td>L'envoi est passé au statut *PROCESSED*</td>\n      <td>La date de production `processed_date` est valorisée.</td>\n    </tr>\n    <tr>\n      <td>ON_STATUS_ACCEPTED</td>\n      <td>lel/v1/recipients</td>\n      <td>Le destinataire est passé au statut *ACCEPTED*</td>\n      <td>Le nombre de pages à facturer `billed_pages_count`, le nombre de pages `pages_count`, le nombre de feuilles `sheets_count` et les codes articles `invoice_items` sont valorisés</td>\n    </tr>\n    <tr>\n      <td>ON_STATUS_REJECTED</td>\n      <td>lel/v1/recipients</td>\n      <td>Le destinataire  est passé au statut *REJECTED*</td>\n      <td>Non applicable</td>\n    </tr>\n    <tr>\n      <td>ON_STATUS_PROCESSED</td>\n      <td>lel/v1/recipients</td>\n      <td>Le destinataire est passé au statut *PROCESSED*</td>\n      <td>La date de production `processed_date` est valorisée.</td>\n    </tr>\n  </table>\n\nExemple de notification envoyée par le service de notification : \n```\n  {\n    \"source\":\"api.maileva.com\",\n    \"user_id\":\"5119f12-3797-4e95-a69f-535860f8b079\",\n    \"client_id\":\"f6a05103-826b-439c-a192-86b7606b29f9\",\n    \"event_type\":\"ON_STATUS_ACCEPTED\",\n    \"resource_type\":\"lel/v1/recipients\",\n    \"resource_name\":\"recipients\",\n    \"event_date\":\"2017-10-09T09:45:07.252Z\",\n    \"event_location\": \"PAGNY\",\n    \"resource_id\":\"3dc03fbf-9412-49df-84c6-826e20810d39\",\n    \"resource_location\":\"https://api.maileva.com/lel/v1/sendings/00000001-0001-0001-0001-000000000001/recipients/3dc03fbf-9412-49df-84c6-826e20810d39\",\n    \"resource_custom_id\": \"%009420086123456789012001250001^\",\n    \"resource_custom_data\": \"order_1234\"\n  }     \n```\nVoir la documentation \"notification_center\".\n### Liste des codes d'erreur\n\n  <table>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n    <tr>\n      <td>DOCUMENT_NOT_FOUND</td>\n      <td>Le document est introuvable</td>\n    </tr>\n    <tr>\n      <td>DOCTYPE_NOT_ACCEPTED</td>\n      <td>Le type de document n'est pas accepté (.pdf, .doc, .docx, .rtf, .txt, .xls, .xlsx autorisés)</td>\n    </tr>\n    <tr>\n      <td>EMPTY_DOCUMENT</td>\n      <td>Le document est vide</td>\n    </tr>\n    <tr>\n      <td>EMPTY_FILE_ID</td>\n      <td>L'identifiant de fichier est vide</td>\n    </tr>\n    <tr>\n      <td>EMPTY_METADATA</td>\n      <td>Les méta-données sont vides</td>\n    </tr>\n    <tr>\n      <td>EMPTY_PRIORITY</td>\n      <td>Le champ priority est vide</td>\n    </tr>\n    <tr>\n      <td>EMPTY_SENDING_NAME</td>\n      <td>Aucun nom d'envoi n'a été transmis</td>\n    </tr>\n    <tr>\n      <td>INVALID_DOCUMENTS_NUMBER</td>\n      <td>Erreur lorsque l'on tente d'ajouter plus de 30 documents dans un envoi</td>\n    </tr>\n    <tr>\n      <td>INVALID_DOCUMENT_SIZE</td>\n      <td>La taille du document transmis dépasse les 10 Mo</td>\n    </tr>\n    <tr>\n      <td>INVALID_TOTAL_SENDING_SIZE</td>\n      <td>La somme des tailles de l'ensemble des documents dépasse 10 Mo</td>\n    </tr>\n    <tr>\n      <td>LONGER_SENDING_NAME_ERROR</td>\n      <td>Le nom de l'envoi est trop long  (256 caractères max)</td>\n    </tr>\n    <tr>\n      <td>META_DATA_WRONG_FORMAT</td>\n      <td>Le paramètre metadata n'est pas correct</td>\n    </tr>\n    <tr>\n      <td>MORE_ONE_PARAMETRE_DOCUMENT</td>\n      <td>Plusieurs documents ont été envoyés en multipart alors que le service limite à un document.</td>\n    </tr>\n    <tr>\n      <td>MORE_ONE_PARAMETRE_METADATA</td>\n      <td>Le paramètre metadata a été transmis plusieurs fois</td>\n    </tr>\n    <tr>\n      <td>NOTIFICATION_EMAIL_NOT_ACCEPTED</td>\n      <td>L'email est invalide.</td>\n    </tr>\n    <tr>\n      <td>NULL_PRIORITY</td>\n      <td>Le champ PRIORITY est nul</td>\n    </tr>\n    <tr>\n      <td>RECIPIENT_NOT_FOUND</td>\n      <td>Ressource RECIPIENT introuvable</td>\n    </tr>\n    <tr>\n      <td>SENDING_NOT_FOUND</td>\n      <td>Ressource SENDING introuvable</td>\n    </tr>\n    <tr>\n      <td>SENDING_STATUS_PERMISSION_ADD</td>\n      <td>Erreur quand on essaie d'ajouter un document ou un destinataire dans un envoi qui n'est pas en état draft</td>\n    </tr>\n    <tr>\n      <td>SENDING_STATUT_PERMISSION_DELETE</td>\n      <td>Erreur quand on essaie de supprimer un envoi qui n'est pas en état draft</td>\n    </tr>\n    <tr>\n      <td>SENDING_STATUT_PERMISSION_SUBMIT</td>\n      <td>Erreur quand on essaie de soumettre un envoi qui n'est pas en état draft</td>\n    </tr>\n    <tr>\n      <td>SENDING_STATUS_PERMISSION_UPDATE_OPTION</td>\n      <td>Erreur quand on essaie de modifier une option d'un envoi qui n'est pas en état draft</td>\n    </tr>\n    <tr>\n      <td>LINE1_OR_LINE2_EMPTY</td>\n      <td>La ligne d'adresse n°1 ou la ligne d'adresse n°2 doit être renseignée</td>\n    </tr>\n    <tr>\n      <td>LINE6_EMPTY</td>\n      <td>La ligne d'adresse n°6 doit être renseignée</td>\n    </tr>\n    <tr>\n      <td>ZIP_CODE_WRONG_FORMAT</td>\n      <td>Erreur quand le code pays est à NULL ou quand le code pays vaut \"FR\" et que le code postal n'est pas sur 5 chiffres et que le champs address_line_6 n'est pas formaté en [CODE POSTAL] [VILLE]</td>\n    </tr>\n    <tr>\n      <td>LINE1_TOO_LONG</td>\n      <td>La ligne d'adresse n°1 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>LINE2_TOO_LONG</td>\n      <td>La ligne d'adresse n°2 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>LINE3_TOO_LONG</td>\n      <td>La ligne d'adresse n°3 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>LINE4_TOO_LONG</td>\n      <td>La ligne d'adresse n°4 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>LINE5_TOO_LONG</td>\n      <td>La ligne d'adresse n°5 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>LINE6_TOO_LONG</td>\n      <td>La ligne d'adresse n°6 est limitée à 38 caractères</td>\n    </tr>\n    <tr>\n      <td>COUNTRY_CODE_TOO_LONG</td>\n      <td>Le code pays est limité à 2 caractères</td>\n    </tr>\n    <tr>\n      <td>COUNTRY_CODE_UNAVAILABLE</td>\n      <td>Le code pays n'est pas autorisé</td>\n    </tr>\n    <tr>\n      <td>DUPLICATE_PRIORITY</td>\n      <td>Plusieurs documents ont la même priorité</td>\n    </tr>\n    <tr>\n      <td>INVALID_RECIPIENTS_NUMBER</td>\n      <td>Le nombre de destinataires est atteint</td>\n    </tr>\n  </table>",
    "contact": {
      "name": "Maileva API team",
      "url": "https://www.maileva.com"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "oAuth2Password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://connect.maileva.com/"
          }
        }
      }
    },
    "schemas": {
      "check_response": {
        "type": "object",
        "properties": {
          "pages_count": {
            "description": "Nombre de pages du document",
            "type": "integer",
            "example": 3
          },
          "converted_document_href": {
            "description": "document après conversion, ce PDF ne contient ni marques techniques, ni page porte-adresse",
            "type": "string",
            "example": "https://api.maileva.com/sendings/cbb7a0f3-bf9b-4179-9a46-123456789901/documents/cbb7a0f3-bf9b-4179-9a46-c0f28d839e8d/renderings/cbb7a0f3-bf9b-4179-9a46-987654321098/pictures/{picture_id}"
          }
        }
      },
      "merged_documents_response": {
        "type": "object",
        "properties": {
          "document_href": {
            "description": "document reprenant l'ensemble des documents de l'envoi. Ce document ne contient pas de page porte adresse, ni de marque technique. Cependant il pourra contenir des pages blanches ajoutées dans le cas d'un envoi recto-verso.",
            "type": "string",
            "example": "https://api.maileva.com/sendings/cbb7a0f3-bf9b-4179-9a46-123456789901/documents/cbb7a0f3-bf9b-4179-9a46-c0f28d839e8d/merged_documents/cbb7a0f3-bf9b-4179-9a46-987654321099"
          }
        }
      },
      "country_code": {
        "type": "string",
        "description": "Code du pays (Code ISO-3166)",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CS",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TP",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "YU",
          "ZA",
          "ZM",
          "ZR",
          "ZW"
        ],
        "example": "FR"
      },
      "document_response": {
        "type": "object",
        "required": [
          "id",
          "name",
          "priority",
          "type",
          "size"
        ],
        "description": "Les documents sont des éléments de \"Mes documents\" ou directement importés pour l'envoi",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant du document",
            "example": "cbb7a0f3-bf9b-4179-9a46-c0f28d839e8d"
          },
          "priority": {
            "type": "integer",
            "description": "Ordre d'impression du document",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Nom du document",
            "example": "Lettre_résiliation.pdf"
          },
          "type": {
            "type": "string",
            "description": "Type du document",
            "example": "application/pdf"
          },
          "pages_count": {
            "type": "integer",
            "description": "Nombre de pages",
            "example": 3
          },
          "size": {
            "type": "integer",
            "description": "Poids du document en octets",
            "example": 139071
          },
          "drive_file_id": {
            "type": "string",
            "description": "Identifiant du document dans \"Mes documents\"",
            "example": "5e142bd6-1cb1-4471-8c00-de7b873fddf6"
          }
        }
      },
      "documents_response": {
        "type": "object",
        "required": [
          "documents",
          "paging"
        ],
        "description": "Les documents d'un envoi",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document_response"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "error_response": {
        "description": "Description de l'erreur",
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "errors_response": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_response"
            }
          }
        }
      },
      "estimate_response": {
        "type": "object",
        "description": "Estimation de l'envoi",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Montant total HT de la commande"
          },
          "postage_amount": {
            "type": "number",
            "format": "float",
            "description": "Montant total des affranchissements"
          },
          "service_amount": {
            "type": "number",
            "format": "float",
            "description": "Montant total HT des impression (total HT - total des affranchissment)"
          },
          "amount_including_tax": {
            "type": "number",
            "format": "float",
            "description": "Montant total TTC de la commande"
          },
          "tax_amount": {
            "type": "number",
            "format": "float",
            "description": "Montant total des taxes de la commande"
          },
          "items": {
            "description": "Eléments constituant le coût de l'envoi",
            "type": "array",
            "items": {
              "description": "Elément constituant le coût de l'envoi",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type d'élément",
                  "type": "string",
                  "enum": [
                    "FOLD_1_PAGE_NB",
                    "FOLD_2_PAGES_NB",
                    "FOLD_3_PAGES_NB",
                    "FOLD_4_PAGES_NB",
                    "FOLD_5_PAGES_NB",
                    "FOLD_6_PAGES_NB",
                    "FOLD_7_PAGES_NB",
                    "FOLD_8_PAGES_NB",
                    "FOLD_9_PAGES_NB",
                    "FOLD_10_PAGES_NB",
                    "ADDITIONNAL_PAGES_NB",
                    "FOLD_1_PAGE_COLOR",
                    "FOLD_2_PAGES_COLOR",
                    "FOLD_3_PAGES_COLOR",
                    "FOLD_4_PAGES_COLOR",
                    "FOLD_5_PAGES_COLOR",
                    "FOLD_6_PAGES_COLOR",
                    "FOLD_7_PAGES_COLOR",
                    "FOLD_8_PAGES_COLOR",
                    "FOLD_9_PAGES_COLOR",
                    "FOLD_10_PAGES_COLOR",
                    "ADDITIONNAL_PAGES_COLOR",
                    "ADDRESS_SHEET",
                    "FAST_PRIORITY_INDUSTRIAL",
                    "FAST_PRIORITY",
                    "FAST_GREEN_LETTER",
                    "ECONOMIC_PRIORITY",
                    "ECONOMIC_ECONOMIC",
                    "ECONOMIC_ECONOMIC_INDUSTRIAL"
                  ],
                  "example": "FOLD_1_PAGE_COLOR"
                },
                "quantity": {
                  "description": "Quantité de l'élément",
                  "type": "integer",
                  "example": 1
                },
                "unit_price": {
                  "description": "Prix unitaire de l'élément",
                  "type": "number"
                },
                "amount": {
                  "description": "Montant de l'élément facturable",
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      },
      "import_recipient": {
        "type": "object",
        "required": [
          "address_line_6",
          "country_code",
          "custom_id",
          "production_center"
        ],
        "properties": {
          "address_line_1": {
            "type": "string",
            "description": "Ligne d'adresse n°1 (Société)",
            "example": "La Poste"
          },
          "address_line_2": {
            "type": "string",
            "description": "Ligne d'adresse n°2 (Civilité, Prénom, Nom)",
            "example": "Me Eva DUPONT"
          },
          "address_line_3": {
            "type": "string",
            "description": "Ligne d'adresse n°3 (Résidence, Bâtiement ...)",
            "example": "Résidence des Peupliers"
          },
          "address_line_4": {
            "type": "string",
            "description": "Ligne d'adresse n°4 (N° et libellé de la voie)",
            "example": "33 avenue de Paris"
          },
          "address_line_5": {
            "type": "string",
            "description": "Ligne d'adresse n°5 (Lieu dit, BP...)",
            "example": "BP 356"
          },
          "address_line_6": {
            "type": "string",
            "description": "Ligne d'adresse n°6 (Code postal et ville)",
            "example": "75000 Paris"
          },
          "country_code": {
            "$ref": "#/components/schemas/country_code"
          },
          "custom_id": {
            "type": "string",
            "maxLength": 32,
            "description": "Identifiant du destinataire en cours d'import et fourni par le client (Smartdata)",
            "example": "%009420086123456789012001250001^"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          },
          "production_center": {
            "type": "string",
            "description": "Centre de production",
            "enum": [
              "PAGNY"
            ],
            "example": "PAGNY"
          }
        }
      },
      "recipients_import_response": {
        "type": "object",
        "required": [
          "status",
          "imported_recipients",
          "paging"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/recipients_import_status"
          },
          "imported_recipients": {
            "type": "array",
            "description": "Les destinataires d'un envoi",
            "items": {
              "$ref": "#/components/schemas/imported_recipient"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "imported_recipient": {
        "type": "object",
        "required": [
          "address_line_6",
          "country_code",
          "status",
          "custom_id",
          "production_center"
        ],
        "properties": {
          "custom_id": {
            "type": "string",
            "maxLength": 32,
            "description": "Identifiant du destinataire en cours d'import et fourni par le client (Smartdata)",
            "example": "%009420086123456789012001250001^"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          },
          "recipient_id": {
            "type": "string",
            "description": "Identifiant du destinataire",
            "format": "uuid"
          },
          "address_line_1": {
            "type": "string",
            "description": "Ligne d'adresse n°1 (Société)",
            "example": "La Poste"
          },
          "address_line_2": {
            "type": "string",
            "description": "Ligne d'adresse n°2 (Civilité, Prénom, Nom)",
            "example": "Me Eva DUPONT"
          },
          "address_line_3": {
            "type": "string",
            "description": "Ligne d'adresse n°3 (Résidence, Bâtiement ...)",
            "example": "Résidence des Peupliers"
          },
          "address_line_4": {
            "type": "string",
            "description": "Ligne d'adresse n°4 (N° et libellé de la voie)",
            "example": "33 avenue de Paris"
          },
          "address_line_5": {
            "type": "string",
            "description": "Ligne d'adresse n°5 (Lieu dit, BP...)",
            "example": "BP 356"
          },
          "address_line_6": {
            "type": "string",
            "description": "Ligne d'adresse n°6 (Code postal et ville)",
            "example": "75000 Paris"
          },
          "country_code": {
            "$ref": "#/components/schemas/country_code"
          },
          "production_center": {
            "type": "string",
            "description": "Centre de production",
            "enum": [
              "PAGNY"
            ],
            "example": "PAGNY"
          },
          "status": {
            "$ref": "#/components/schemas/recipient_import_status"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_response"
            }
          }
        }
      },
      "invoice_item": {
        "type": "object",
        "description": "Article de facturation d'un envoi",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code",
            "enum": [
              "COLFR01",
              "COLFR02",
              "COLFR11",
              "COLFR12",
              "COUFR01",
              "COUFR02",
              "COUFR11",
              "COUFR12",
              "XAFFR01",
              "PORTEADRESSE",
              "POIDS",
              "OM1",
              "OM2",
              [
                "A COMPLETER"
              ]
            ],
            "example": "PORTEADRESSE"
          },
          "quantity": {
            "type": "number",
            "format": "float",
            "description": "Quantité",
            "example": 3
          },
          "unit_price_without_tax": {
            "type": "number",
            "format": "float",
            "description": "Prix unitaire",
            "example": 0
          }
        }
      },
      "invoice_items_response": {
        "description": "Ensemble des articles de facturation pour un envoi",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/invoice_item"
        }
      },
      "options": {
        "type": "object",
        "description": "Les options sont des fonctionnalités proposées à l'utilisateur pour paramétrer son envoi",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "example": "Résiliation d'un abonnement téléphonique"
          },
          "color_printing": {
            "type": "boolean",
            "description": "Impression couleur",
            "example": true
          },
          "duplex_printing": {
            "type": "boolean",
            "description": "Impression recto verso",
            "example": true
          },
          "optional_address_sheet": {
            "type": "boolean",
            "description": "Feuille porte adresse optionnelle",
            "example": false
          },
          "scheduled_date": {
            "type": "string",
            "format": "date",
            "description": "Date d'engagement de remise en poste'",
            "example": "2019-04-26"
          },
          "postal_tracking": {
            "type": "boolean",
            "description": "Option de suivi postal (facultatif, false par défaut)",
            "example": false
          },
          "custom_id": {
            "type": "string",
            "maxLength": 38,
            "description": "Identifiant de l'envoi défini par le client",
            "example": "order_1234"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          }
        }
      },
      "paging_response": {
        "description": "Pagination des résultats",
        "type": "object",
        "required": [
          "next",
          "prev",
          "total_results"
        ],
        "properties": {
          "next": {
            "description": "Page suivante",
            "type": "string"
          },
          "prev": {
            "description": "Page précédente",
            "type": "string"
          },
          "total_results": {
            "description": "Nombre de résultats",
            "type": "number"
          }
        }
      },
      "previews_response": {
        "type": "object",
        "properties": {
          "preview_id": {
            "type": "string"
          }
        }
      },
      "preview_image": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "width": {
            "type": "number",
            "format": "float"
          },
          "height": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "preview_response": {
        "type": "object",
        "description": "Les images du bon à tirer de l'envoi",
        "properties": {
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/preview_image"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "renderings_response": {
        "type": "object",
        "properties": {
          "rendering_id": {
            "type": "string"
          }
        }
      },
      "rendering_image": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "width": {
            "type": "number",
            "format": "float"
          },
          "height": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "rendering_response": {
        "type": "object",
        "description": "Les images du rendu d'un document",
        "properties": {
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rendering_image"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "priority": {
        "type": "object",
        "required": [
          "priority"
        ],
        "properties": {
          "priority": {
            "description": "Ordre d'impression du document",
            "type": "integer",
            "example": 1
          }
        }
      },
      "recipient_response": {
        "type": "object",
        "description": "Un destinataire de l'envoi",
        "required": [
          "id",
          "address_line_6",
          "country_code",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant du destinataire",
            "example": "d905a65e-aa46-4f37-8480-260c4600c810"
          },
          "custom_id": {
            "type": "string",
            "maxLength": 32,
            "description": "Identifiant du destinataire en cours d'import et fourni par le client (Smartdata)",
            "example": "%009420086123456789012001250001^"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          },
          "address_line_1": {
            "type": "string",
            "description": "Ligne d'adresse n°1 (Société)",
            "example": "La Poste"
          },
          "address_line_2": {
            "type": "string",
            "description": "Ligne d'adresse n°2 (Civilité, Prénom, Nom)",
            "example": "Me Eva DUPONT"
          },
          "address_line_3": {
            "type": "string",
            "description": "Ligne d'adresse n°3 (Résidence, Bâtiement ...)",
            "example": "Résidence des Peupliers"
          },
          "address_line_4": {
            "type": "string",
            "description": "Ligne d'adresse n°4 (N° et libellé de la voie)",
            "example": "33 avenue de Paris"
          },
          "address_line_5": {
            "type": "string",
            "description": "Ligne d'adresse n°5 (Lieu dit, BP...)",
            "example": "BP 356"
          },
          "address_line_6": {
            "type": "string",
            "description": "Ligne d'adresse n°6 (Code postal et ville)",
            "example": "75000 Paris"
          },
          "country_code": {
            "$ref": "#/components/schemas/country_code"
          },
          "production_center": {
            "type": "string",
            "description": "Centre de production",
            "enum": [
              "PAGNY"
            ],
            "example": "PAGNY"
          },
          "status": {
            "$ref": "#/components/schemas/recipient_status"
          },
          "status_detail": {
            "type": "string",
            "description": "Détail d'un statut (cause du rejet)"
          }
        }
      },
      "recipient_creation": {
        "type": "object",
        "required": [
          "address_line_6",
          "country_code",
          "custom_id",
          "production_center"
        ],
        "properties": {
          "address_line_1": {
            "type": "string",
            "description": "Ligne d'adresse n°1 (Société)",
            "example": "La Poste"
          },
          "address_line_2": {
            "type": "string",
            "description": "Ligne d'adresse n°2 (Civilité, Prénom, Nom)",
            "example": "Me Eva DUPONT"
          },
          "address_line_3": {
            "type": "string",
            "description": "Ligne d'adresse n°3 (Résidence, Bâtiement ...)",
            "example": "Résidence des Peupliers"
          },
          "address_line_4": {
            "type": "string",
            "description": "Ligne d'adresse n°4 (N° et libellé de la voie)",
            "example": "33 avenue de Paris"
          },
          "address_line_5": {
            "type": "string",
            "description": "Ligne d'adresse n°5 (Lieu dit, BP...)",
            "example": "BP 356"
          },
          "address_line_6": {
            "type": "string",
            "description": "Ligne d'adresse n°6 (Code postal et ville)",
            "example": "75000 Paris"
          },
          "country_code": {
            "$ref": "#/components/schemas/country_code"
          },
          "custom_id": {
            "type": "string",
            "maxLength": 32,
            "description": "Identifiant du destinataire en cours d'import et fourni par le client (Smartdata)",
            "example": "%009420086123456789012001250001^"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          },
          "production_center": {
            "type": "string",
            "description": "Centre de production",
            "enum": [
              "PAGNY"
            ],
            "example": "PAGNY"
          }
        }
      },
      "recipients_counts": {
        "type": "object",
        "properties": {
          "draft": {
            "type": "integer",
            "description": "Nombre de destinataires au statut DRAFT",
            "example": 0
          },
          "pending": {
            "type": "integer",
            "description": "Nombre de destinataires au statut PENDING",
            "example": 1
          },
          "processed": {
            "type": "integer",
            "description": "Nombre de destinataires au statut PROCESSED",
            "example": 0
          },
          "rejected": {
            "type": "integer",
            "description": "Nombre de destinataires au statut REJECTED",
            "example": 0
          },
          "total": {
            "type": "integer",
            "description": "Nombre de destinataires total",
            "example": 1
          }
        }
      },
      "recipients_response": {
        "type": "object",
        "required": [
          "recipients",
          "paging"
        ],
        "description": "Les destinataires d'un envoi",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recipient_response"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "sending_response": {
        "type": "object",
        "required": [
          "id",
          "name",
          "status",
          "recipients_counts",
          "creation_date",
          "documents_count"
        ],
        "description": "Un envoi de LEL",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant de l'envoi",
            "example": "110e8400-e29b-11d4-a716-446655440000"
          },
          "order_id": {
            "type": "string",
            "description": "Identifiant de la commnande",
            "example": "127945f1-ad3d-41a6-b962-c2cb807e9ce0"
          },
          "name": {
            "type": "string",
            "description": "Nom de l'envoi",
            "example": "Résiliation d'un abonnement téléphonique"
          },
          "status": {
            "$ref": "#/components/schemas/sending_status"
          },
          "status_detail": {
            "type": "string",
            "description": "Détail d'un statut (cause du rejet)"
          },
          "recipients_counts": {
            "$ref": "#/components/schemas/recipients_counts"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de création",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "submission_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de soumission",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "scheduled_date": {
            "type": "string",
            "format": "date",
            "description": "Date d'engagement de remise en poste",
            "example": "2018-03-14"
          },
          "processed_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de production",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "documents_count": {
            "type": "integer",
            "description": "Nombre de documents dans l'envoi",
            "example": 1
          },
          "billed_pages_count": {
            "type": "integer",
            "description": "Nombre de pages facturées",
            "example": 3
          },
          "postal_tracking": {
            "type": "boolean",
            "description": "Option de suivi postal",
            "example": false
          },
          "custom_id": {
            "type": "string",
            "maxLength": 38,
            "description": "Identifiant de l'envoi défini par le client",
            "example": "order_1234"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          }
        }
      },
      "sending_creation": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de l'envoi",
            "maxLength": 256,
            "minLength": 1,
            "example": "Résiliation d'un abonnement téléphonique"
          }
        }
      },
      "sending_creation_response": {
        "type": "object",
        "required": [
          "id",
          "name",
          "status",
          "creation_date"
        ],
        "description": "Un envoi \"Sending\" est un élément de l'application d'envoi",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant d'un envoi",
            "example": "110e8400-e29b-11d4-a716-446655440000"
          },
          "order_id": {
            "type": "string",
            "description": "Identifiant de la commnande",
            "example": "127945f1-ad3d-41a6-b962-c2cb807e9ce0"
          },
          "name": {
            "type": "string",
            "description": "Nom d'un envoi",
            "example": "Résiliation d'un abonnement téléphonique"
          },
          "status": {
            "$ref": "#/components/schemas/sending_status"
          },
          "status_detail": {
            "type": "string",
            "description": "Détail d'un statut (cause du rejet)"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de création",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "submission_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de soumission",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "scheduled_date": {
            "type": "string",
            "format": "date",
            "description": "Date d'engagement de remise en poste",
            "example": "2018-03-14"
          },
          "processed_date": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de production",
            "example": "2018-03-14T07:21:40.757Z"
          },
          "documents_count": {
            "type": "integer",
            "description": "Nombre de documents",
            "example": 1
          },
          "pages_count": {
            "type": "integer",
            "description": "Nombre de pages",
            "example": 3
          },
          "billed_pages_count": {
            "type": "integer",
            "description": "Nombre de pages facturées",
            "example": 3
          },
          "sheets_count": {
            "type": "integer",
            "description": "Nombre de feuilles",
            "example": 2
          },
          "envelope_type": {
            "$ref": "#/components/schemas/envelope_type"
          },
          "color_printing": {
            "type": "boolean",
            "description": "Impression couleur",
            "example": true
          },
          "duplex_printing": {
            "type": "boolean",
            "description": "Impression recto verso",
            "example": true
          },
          "optional_address_sheet": {
            "type": "boolean",
            "description": "Feuille porte adresse optionnnelle (payante)",
            "example": false
          },
          "system_address_sheet": {
            "type": "boolean",
            "description": "Feuille porte adresse imposée (gratuite)",
            "example": false
          },
          "postal_tracking": {
            "type": "boolean",
            "description": "Option de suivi postal",
            "example": false
          },
          "recipients_counts": {
            "$ref": "#/components/schemas/recipients_counts"
          },
          "custom_id": {
            "type": "string",
            "maxLength": 38,
            "description": "Identifiant de l'envoi défini par le client",
            "example": "order_1234"
          },
          "custom_data": {
            "type": "string",
            "maxLength": 1024,
            "description": "Information libre fournie par le client",
            "example": "order_1234"
          }
        }
      },
      "sendings_response": {
        "type": "object",
        "required": [
          "sendings",
          "paging"
        ],
        "description": "Les envois",
        "properties": {
          "sendings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sending_response"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging_response"
          }
        }
      },
      "import_recipients": {
        "type": "object",
        "description": "Les destinataires d'un envoi",
        "properties": {
          "import_recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/import_recipient"
            }
          }
        },
        "required": [
          "import_recipients"
        ]
      },
      "envelope_type": {
        "type": "string",
        "description": "Type de l'envelope",
        "enum": [
          "DL",
          "C4",
          "AUTOMATIC"
        ],
        "example": "DL"
      },
      "recipient_import_status": {
        "type": "string",
        "description": "Statut d'une ligne d'import\nPENDING: le destinataire vient d'être importé, il est en cours de traitement;\nPROCESSED : le destinataire a été validé et inséré à l'envoi;\nREJECTED : le destinataire n'a pas été validé et n'est pas inséré à l'envoi ",
        "enum": [
          "PENDING",
          "PROCESSED",
          "REJECTED"
        ],
        "example": "PENDING"
      },
      "recipient_status": {
        "type": "string",
        "description": "Statut du destinataire.\n<table> <tr> <td>DRAFT</td> <td>le destinataire a été ajouté à l'envoi qui est au statut draft</td> </tr> <tr> <td>PENDING</td> <td>le destinataire a été ni traité, ni rejeté</td> </tr> <tr> <td>PROCESSED</td> <td>le courrier a été mis sous pli</td> </tr> <tr> <td>REJECTED</td> <td>le destinataire n'est pas valide</td> </tr> </table> ",
        "enum": [
          "DRAFT",
          "PENDING",
          "PROCESSED",
          "REJECTED"
        ],
        "example": "PENDING"
      },
      "sending_status": {
        "type": "string",
        "description": "Statut d'un envoi : <table> <tr> <td>DRAFT</td> <td>L'envoi est au statut de brouillon, non validé par l’utilisateur</td> </tr> <tr> <td>PAYMENT_REQUIRED</td> <td>L'envoi est verrouillé et attente de paiement</td> </tr> <tr> <td>PENDING</td> <td>Le client a fait un envoi, mais il n’a pas encore été analysé par le système ou l'envoi a été reçu mais il n’a pas encore été analysé</td> </tr> <tr> <td>ACCEPTED</td> <td>L'envoi a été accepté mais il est planifiée pour plus tard ou l'envoi a été accepté et va être produit</td> </tr> <tr> <td>REJECTED</td> <td>L'envoi est refusé</td> </tr> <tr> <td>PROCESSED</td> <td>L'envoi a été traité et tous les destinataires étaient valides</td> </tr> <tr> <td>PROCESSED_WITH_ERRORS</td> <td>L'envoi a été traité mais certains destinataires n’étaient pas valides</td> </tr> </table> ",
        "enum": [
          "DRAFT",
          "PAYMENT_REQUIRED",
          "PENDING",
          "ACCEPTED",
          "REJECTED",
          "PROCESSED",
          "PROCESSED_WITH_ERRORS"
        ],
        "example": "PENDING"
      },
      "recipients_import_status": {
        "type": "string",
        "description": "Statut de l'import\nPENDING : l'avancement de l'import des destinataires est en cours;\nPROCESSED : l'avancement de l'import des destinataires est achevé (destinataires KO et/ou OK); ",
        "enum": [
          "PENDING",
          "PROCESSED"
        ],
        "example": "PENDING"
      }
    },
    "parameters": {
      "document_id": {
        "name": "document_id",
        "in": "path",
        "description": "Identifiant du document",
        "required": true,
        "schema": {
          "maxLength": 40,
          "type": "string"
        }
      },
      "import_recipients_id": {
        "name": "import_id",
        "in": "path",
        "description": "Identifiant de l'import",
        "required": true,
        "schema": {
          "maxLength": 40,
          "type": "string"
        }
      },
      "paging_start_index": {
        "name": "start_index",
        "in": "query",
        "description": "Le premier élément à retourner",
        "required": false,
        "schema": {
          "type": "number",
          "default": 1,
          "minLength": 1
        }
      },
      "paging_count": {
        "name": "count",
        "in": "query",
        "description": "Le nombre d'élément à retourner",
        "required": false,
        "schema": {
          "type": "number",
          "default": 20,
          "minLength": 1,
          "maxLength": 20
        }
      },
      "picture_id": {
        "name": "picture_id",
        "in": "path",
        "description": "Identifiant de l'image du bon à tirer",
        "required": true,
        "schema": {
          "maxLength": 256,
          "type": "string"
        }
      },
      "preview_id": {
        "name": "preview_id",
        "in": "path",
        "description": "Identifiant du bon à tirer",
        "required": true,
        "schema": {
          "maxLength": 256,
          "type": "string"
        }
      },
      "rendering_id": {
        "name": "rendering_id",
        "in": "path",
        "description": "Identifiant du rendu de document",
        "required": true,
        "schema": {
          "maxLength": 256,
          "type": "string"
        }
      },
      "recipient_id": {
        "name": "recipient_id",
        "in": "path",
        "description": "Identifiant du destinataire",
        "required": true,
        "schema": {
          "maxLength": 40,
          "type": "string"
        }
      },
      "sending_id": {
        "name": "sending_id",
        "in": "path",
        "description": "Identifiant d'un envoi",
        "required": true,
        "schema": {
          "maxLength": 40,
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/sendings": {
      "post": {
        "tags": [
          "Envoi"
        ],
        "summary": "Création d'un envoi",
        "description": "Cette API permet de créer un envoi.\n\nLe champ obligatoire pour créer un envoi est le nom. Sont autorisés les majuscules, minuscules, caractères spéciaux et lettres accentuées. La longueur de champs est de 256 caractères maximum.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sending_creation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "description": "URL vers le détail de la ressource",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sending_creation_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Envoi"
        ],
        "summary": "Liste des envois",
        "description": "Cette API permet d'obtenir la liste des envois. \n\nIl est possible de rajouter un attribut dans les paramètres afin de filtrer la liste des envois. La liste des envois peut être paginée. Par défaut, la pagination est de 50 résultats. Elle peut être modifiée pour atteindre jusqu'à 500 résultats. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/paging_start_index"
          },
          {
            "$ref": "#/components/parameters/paging_count"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sendings_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}": {
      "get": {
        "tags": [
          "Envoi"
        ],
        "summary": "Détail d'un envoi",
        "description": "Cette API permet de récupérer un envoi à partir de son identifiant.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sending_creation_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Envoi"
        ],
        "summary": "Modification des options d'envoi",
        "description": "Cette API permet de modifier les options liées à l'envoi d'un courrier :\n- le coloris d'impression : couleur ou noir et blanc (couleur par défaut),\n- le format d'impression : recto ou recto-verso (recto-verso par défaut),\n- l'ajout d'une page porte-adresse : oui /non (non par défaut),\n- date de production souhaitée : date à laquelle la production est souhaitée (obligatoire)\n- suivi de la lettre : oui / non. Active l'envoi en lettre suivie.\n\nLe type d'enveloppe est choisi automatiquement.  1 à 5 feuilles (hors feuille porte-adresse) : enveloppe DL. 6 à 30 feuilles (hors feuille porte-adresse) : enveloppe C4.\nSeuls les paramètres pour lesquels une valeur est fournie sont modifiés.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/options"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Envoi"
        ],
        "summary": "Suppression d'un envoi",
        "description": "Cette API permet de supprimer un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/submit": {
      "post": {
        "tags": [
          "Envoi"
        ],
        "summary": "Finalisation d'un envoi",
        "description": "Cette API permet de valider l'envoi et de déclencher ainsi la demande de production.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Ajout d'un document à l'envoi.",
        "description": "Cette API permet d'ajouter un document à l'envoi. \nLes types de documents autorisés sont :\n  - Adobe (.pdf)\n  - Word (.doc, .docx et .rtf)\n  - Texte (.txt)\n  - Excel (.xls, .xlsx)  \n  \nLe document ajouté ne doit pas dépasser 10 Mo.\nLe nombre total de documents est limité à 30 par envoi.\nLe document doit être transmis en mutipart ainsi que la metadata. La metadata est contituée de *priority* (permet de définir l'ordre d'impression des documents) et de *name* (permet de donner un nom au fichier).\n\nLe document téléchargé est ajouté en dernière position de la liste de documents si *priority* n'est pas indiqué. \n\nLa première page du document est positionné systématiquement sur le recto de la feuille.\n\nLe  nombre de feuille d’un envoi ne doit pas dépasser la capacité de l’enveloppe\n\n  - Enveloppe grand format C4 (210x300 mm, Double fenêtre) : 30 feuilles maximum \n\n  - Enveloppe petit format C6 (114x229 mm Simple ou Double-fenêtre) : 5 feuilles maximum",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "document": {
                    "type": "string",
                    "format": "binary"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "priority": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "description": "URL vers le détail de la ressource",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Liste des documents d'un envoi",
        "description": "Cette API permet de récupérer la liste des documents associés à l'envoi.\nLa liste des documents d'un envoi peut être paginée. Par défaut et au maximum, la pagination est de 30 résultats.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/paging_start_index"
          },
          {
            "$ref": "#/components/parameters/paging_count"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documents_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Détail d'un document",
        "description": "Cette API permet de récupérer le détail d'un document utilisé lors de l'envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Suppression d'un document",
        "description": "Cette API permet de supprimer un document d'un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}/set_priority": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Classement des documents",
        "description": "Cette API permet d'ordonner les documents d'un envoi.\n\nLes documents seront imprimés et mis sous pli dans l'ordre choisi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/priority"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}/check": {
      "post": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de calculer le nombre de pages d'un document de manière asynchrone. \n\nLe nombre de pages de l'ensemble des documents associés à un envoi ne peut pas dépasser 60.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de savoir si le calcul du nombre de pages d'un document est terminé. \n\nIndique le nombre de pages si le calcul est terminé.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_response"
                }
              }
            }
          },
          "204": {
            "description": "No results yet"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}/renderings": {
      "post": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de générer un aperçu d'un document de manière asynchrone. Il s'agit d'un simple aperçu du document après conversion en PDF. Cet aperçu ne contient ni marque technique, ni page porte-adresse.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de savoir si la génération d'un aperçu de document est terminée.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/renderings_response"
                }
              }
            }
          },
          "204": {
            "description": "No results yet"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}/renderings/{rendering_id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de retourner la liste des images d'un aperçu de document.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          },
          {
            "$ref": "#/components/parameters/rendering_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rendering_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/documents/{document_id}/renderings/{rendering_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "description": "Cette API permet de retourner une image de l'aperçu d'un document.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/document_id"
          },
          {
            "$ref": "#/components/parameters/rendering_id"
          },
          {
            "$ref": "#/components/parameters/picture_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients": {
      "post": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Ajout d'un destinataire à l'envoi",
        "description": "Cette API permet d'ajouter un destinataire à l'envoi. Le nombre de destinataires est limité à 6 000.\n\nChaque ligne d’adresse doit contenir au plus 38 caractères.\n La ligne d’adresse 1 ou 2 doit être définie.\nLa ligne d’adresse 6 doit être définie. Pour les adresses françaises, la ligne d’adresse 6 doit contenir un code postal sur 5 chiffres, suivi d’un espace, suivi d’une ville.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipient_creation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "description": "URL vers le détail de la ressource",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipient_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Liste des destinataires d'un envoi",
        "description": "Cette API permet de récupérer la liste des destinataires d'un envoi.\nCette liste peut être paginée. Par défaut, la pagination est de 50 résultats. Elle peut atteindre 500 au maximum.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/paging_start_index"
          },
          {
            "$ref": "#/components/parameters/paging_count"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipients_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Suppression de tous les destinataires",
        "description": "Cette API permet de supprimer tous les destinataires d'un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/{recipient_id}": {
      "get": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Détail d'un destinataire",
        "description": "Cette API permet de lister les données d'un destinataire d'un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipient_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Suprression d'un destinataire",
        "description": "Cette API permet de supprimer un destinataire d'un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/imports": {
      "post": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Ajout d'un ou de plusieurs destinataire(s) à l'envoi",
        "description": "\nCette API permet d'ajouter un ou plusieurs destinataire(s) à l'envoi. Le nombre de destinataires à l'importation est limité à 6 000.\n\nChaque ligne d’adresse doit contenir au plus 38 caractères. La ligne d’adresse 1 ou 2 doit être définie. La ligne d’adresse 6 doit être définie. Pour les adresses françaises, la ligne d’adresse 6 doit contenir un code postal sur 5 chiffres, suivi d’un espace, suivi d’une ville.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/import_recipients"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "description": "URL vers le détail de la ressource",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/imports/{import_id}": {
      "get": {
        "tags": [
          "Destinataires"
        ],
        "summary": "Avancement d'import des destinataire(s) d'un envoi",
        "description": "Cette API permet de connaitre l'état d'avancement des destinataire(s) importé(s).",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/import_recipients_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipients_import_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/{recipient_id}/previews": {
      "post": {
        "tags": [
          "Bon à tirer"
        ],
        "description": "Cette API permet de générer un bon à tirer pour un destinataire de manière asynchrone.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bon à tirer"
        ],
        "description": "Cette API permet de savoir si la génération d'un bon à tirer est terminée.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/previews_response"
                }
              }
            }
          },
          "204": {
            "description": "No results yet"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/{recipient_id}/previews/{preview_id}": {
      "get": {
        "tags": [
          "Bon à tirer"
        ],
        "description": "Cette API permet de retourner la liste des images d'un bon à tirer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          },
          {
            "$ref": "#/components/parameters/preview_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/recipients/{recipient_id}/previews/{preview_id}/pictures/{picture_id}": {
      "get": {
        "tags": [
          "Bon à tirer"
        ],
        "description": "Cette API permet de retourner une image d'un bon à tirer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          },
          {
            "$ref": "#/components/parameters/recipient_id"
          },
          {
            "$ref": "#/components/parameters/preview_id"
          },
          {
            "$ref": "#/components/parameters/picture_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/check": {
      "post": {
        "tags": [
          "Vérification de l'envoi"
        ],
        "description": "Cette API permet de lancer de manière asynchrone le contrôle de l'envoi, de déterminer les métriques de l'envoi et de chaque destinataire.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Vérification de l'envoi"
        ],
        "description": "Cette API permet de connaitre l'état du contrôle de l'envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "204": {
            "description": "No results yet"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/estimate": {
      "post": {
        "tags": [
          "Vérification de l'envoi"
        ],
        "description": "Cette API permet d'estimer le coût un envoi.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/estimate_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/merged_documents": {
      "post": {
        "tags": [
          "Envoi"
        ],
        "description": "Cette API permet de lancer de manière asynchrone la génération d'une document reprenant l'ensemble des documents de l'envoi. Ce document ne contient pas de page porte adresse, ni de marque technique. Cependant il pourra contenir des pages blanches ajoutées dans le cas d'un envoi recto-verso.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Envoi"
        ],
        "description": "Cette API permet de connaitre l'état d'une concaténation des documents.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/merged_documents_response"
                }
              }
            }
          },
          "204": {
            "description": "No results yet"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    },
    "/sendings/{sending_id}/invoice_items": {
      "get": {
        "tags": [
          "Envoi"
        ],
        "description": "Cette API permet de retourner la liste des articles qui composent l'envoi.\nVoici la liste des articles ci-dessous :  <table> <tr> <th>Code</th> <th>Désignation</th> <th>TVA</th> <th>Description</th> </tr> <tr> <td>COLLR01</td> <td>1ere Page Couleur (LREL Facteur C6)</td> <td>Taux plein</td> <td>Première page couleur LREL facteur C6</td> </tr> <tr> <td>COLLR02</td> <td>Page Suiv Couleur (LREL Facteur C6)</td> <td>Taux plein</td> <td>Pages suivantes couleur LREL facteur C6</td> </tr> <tr> <td>COLLR11</td> <td>1ere Page Couleur (LREL Facteur C4)</td> <td>Taux plein</td> <td>Première page couleur LREL facteur C4</td> </tr> <tr> <td>COLLR12</td> <td>Page Suiv Couleur (LREL Facteur C4)</td> <td>Taux plein</td> <td>Pages suivantes couleur LREL facteur C4</td> </tr> <tr> <td>COULR01</td> <td>1ere Page N&B (LREL Facteur C6)</td> <td>Taux plein</td> <td>Première page noir & blanc LREL facteur C6</td> </tr> <tr> <td>COULR02</td> <td>Page Suiv N&B (LREL Facteur C6)</td> <td>Taux plein</td> <td>Pages suivantes noir & blanc LREL facteur C6</td> </tr> <tr> <td>COULR11</td> <td>1ere Page N&B (LREL Facteur C4)</td> <td>Taux plein</td> <td>Première page noir & blanc LREL facteur C4</td> </tr> <tr> <td>COULR12</td> <td>Page Suiv N&B (LREL Facteur C4)</td> <td>Taux plein</td> <td>Pages suivantes noir & blanc LREL facteur C4</td> </tr> <tr> <td>XAFFR10</td> <td>Affranch Lettre Recom En Ligne ss</td> <td>Sans TVA</td> <td>Affranchissement LREL sans AR</td> </tr> <tr> <td>XAFFR11</td> <td>Affranch Lettre Recom En Ligne av</td> <td>Sans TVA</td> <td>Affranchissement LREL avec AR</td> </tr> <tr> <td>PORTEADRESSE</td> <td>Page porte-adresse</td> <td>Sans TVA</td> <td>Nombre de pages porte-adresse</td> </tr> <tr> <td>POIDS</td> <td>Poids d'un destinataire (un pli)</td> <td>Sans TVA</td> <td>Poids en gramme</td> </tr> <tr> <td>OM1</td> <td>Complément aérien vers la zone OM1</td> <td>Sans TVA</td> <td>Nombre de destinataires vers la zone OM1</td> </tr> <tr> <td>OM2</td> <td>Complément aérien vers la zone OM2</td> <td>Sans TVA</td> <td>Nombre de destinataires vers la zone OM2</td> </tr> </table>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/sending_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice_items_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          }
        }
      }
    }
  }
}
