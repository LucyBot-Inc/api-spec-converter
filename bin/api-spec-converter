#!/usr/bin/env node
'use strict';

var _ = require('lodash');

var Program = require('commander');
var Package = require(__dirname + '/../package.json');
var Converter = require('..');

function keyValue (keyvalue, result) {
  const pair = keyvalue.split('=', 2);
  const key = pair[0];
  const value = JSON.parse(pair[1]);
  result[key] = value;
  return result;
}

Program
  .version(Package.version)
  .description('Convert API descriptions between popular formats.\n\n  ' +
               'Supported formats: \n    * ' +
               _(Converter.Formats).keys().join('\n    * ')
              )
  .option('-f, --from <format>', 'Specifies format to convert')
  .option('-t, --to <format>', 'Specifies output format')
  .option('-s, --syntax [outputSyntax]', 'Specifies output data syntax: json or yaml')
  .option('-o, --order [sortOrder]', 'Specifies top fields ordering: alpha or default openapi')
  .option('-c, --check', 'Check if result is valid spec')
  .option('-d, --dummy', 'Fill missing required fields with dummy data')
  .option('--passthrough <keyvalue>', 'Pass an option to the underlying converter', keyValue, {})
  .arguments('<URL|filename>')
  .action(main)
  .parse(process.argv);

function main(url, options) {
  if (!options.from)
    Program.help();

  if (!options.to)
    options.to = options.from;
  Converter.convert({
    source: url,
    from: options.from,
    to: options.to,
    passthrough: options.passthrough
  }).then(function (spec) {
    console.log(spec.stringify({syntax: options.syntax, order: options.order}))
    if (!options.check)
      return;
    return spec.validate()
      .then(function (result) {
        if (result.errors) {
          process.exitCode = 255;
          console.error('\nErrors:\n');
          console.error(JSON.stringify(result.errors, null, 2));
        }
        if (result.warnings) {
          console.error('\nWarnings:\n');
          console.error(JSON.stringify(result.warnings, null, 2));
        }
      });
  }).done();
}
